#!/usr/bin/env bash
#
#

set -e -u

# load the stdlib
. "$DIRENV_LIBEXEC/direnv-stdlib" >&2

if direnv_find_rc; then
  unset direnv_find_rc

  st_mtime=`direnv file-mtime "$PWD/.envrc"`

  if [ -n "${DIRENV_BACKUP-}" ]; then
    if [ -n "${DIRENV_DIR-}" ] &&
       [ "${DIRENV_DIR#-}" = "$PWD" ] &&
       [ "$st_mtime" -le "${DIRENV_MTIME:-0}" ]; then
      # env already loaded
      exit 0
    elif [ "$st_mtime" -gt "${DIRENV_MTIME:-0}" ]; then
      echo "direnv: reloading `user_rel_path $PWD`" >&2
    else
      echo "direnv: switching from `user_rel_path $DIRENV_DIR` to `user_rel_path $PWD`" >&2
    fi

    # restore the old environment
    diff=`direnv diff "$DIRENV_BACKUP"`
    echo $diff
    eval "$diff"
    unset diff
  else
    # save the original environment
    export DIRENV_BACKUP=`direnv dump`
    echo "export DIRENV_BACKUP=\"${DIRENV_BACKUP}\";"
    echo "export DIRENV_LIBEXEC=\"${DIRENV_LIBEXEC}\";"
  fi

  # DIRENV variables
  export DIRENV_DIR=-$PWD
  export DIRENV_MTIME=$st_mtime
  unset st_mtime

  # Load a maser envrc if it exists
  if [ -f "$HOME/.direnvrc" ]; then
    source_env $HOME/.direnvrc 1>&2
  fi

  # Get the source
  source_env "$PWD/.envrc" >&2

  # export the diff
  direnv diff -reverse "$DIRENV_BACKUP"
elif [ -n "${DIRENV_BACKUP-}" ]; then
  echo "direnv: unloading `user_rel_path $DIRENV_DIR`" >&2

  direnv diff "$DIRENV_BACKUP"
  echo "unset DIRENV_BACKUP"
fi
