#!/usr/bin/env bash
#
#

set -e

direnv_find_rc() {
  while true; do
    local cur_path=`pwd 2>/dev/null`
    if [ -f ".envrc" ]; then
      return 0
    fi
    if [ "$cur_path" = "/" ] || [ "$cur_path" = "//" ]; then
      return 1
    fi
    cd ..
  done
}


if direnv_find_rc; then
  unset direnv_find_rc
  if [ $(uname) = Linux ]; then
    st_mtime=`stat -c '%Y' "$PWD/.envrc"`
  else
    eval `stat -s "$PWD/.envrc"`
  fi
  if [ -n "$DIRENV_BACKUP" ]; then
    if [ "$DIRENV_DIR" = "`pwd`" ] && [ "$st_mtime" -le "${DIRENV_MTIME:-0}" ]; then
      # env already loaded
      exit 0
    fi
    # restore the old environment
    eval `direnv diff "$DIRENV_BACKUP"`
  else
    # save the original environment
    export DIRENV_BACKUP=`direnv dump`
    echo "export DIRENV_BACKUP=\"${DIRENV_BACKUP}\";"
  fi

  # DIRENV variables
  export DIRENV_DIR=$PWD
  export DIRENV_MTIME=$st_mtime

  # load the stdlib
  . `direnv stdlib`

  echo "direnv: loading $PWD" >&2
  . "$PWD/.envrc" >&2

  # export the diff
  direnv diff -r "$DIRENV_BACKUP"
  echo "alias direnv-reload='unset DIRENV_DIR'"
else
  if [ -n "$DIRENV_BACKUP" ]; then
    echo "direnv: unloading $DIRENV_DIR" >&2
    direnv diff "$DIRENV_BACKUP"
    # Also remove the backup
    echo "unset DIRENV_BACKUP;"
    echo "if type direnv-reload >/dev/null ; then unalias direnv-reload; fi"
  fi
fi
